<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $content
 * @property string $status
 * @property integer $author_id
 * @property integer $category_id
 * @property timestamp $published_at
 * @property string $file
 * @property Author $Author
 * @property Category $Category
 * @property Doctrine_Collection $Tags
 * @property Doctrine_Collection $ArticleTag
 * 
 * @method string              getTitle()        Returns the current record's "title" value
 * @method clob                getContent()      Returns the current record's "content" value
 * @method string              getStatus()       Returns the current record's "status" value
 * @method integer             getAuthorId()     Returns the current record's "author_id" value
 * @method integer             getCategoryId()   Returns the current record's "category_id" value
 * @method timestamp           getPublishedAt()  Returns the current record's "published_at" value
 * @method string              getFile()         Returns the current record's "file" value
 * @method Author              getAuthor()       Returns the current record's "Author" value
 * @method Category            getCategory()     Returns the current record's "Category" value
 * @method Doctrine_Collection getTags()         Returns the current record's "Tags" collection
 * @method Doctrine_Collection getArticleTag()   Returns the current record's "ArticleTag" collection
 * @method Article             setTitle()        Sets the current record's "title" value
 * @method Article             setContent()      Sets the current record's "content" value
 * @method Article             setStatus()       Sets the current record's "status" value
 * @method Article             setAuthorId()     Sets the current record's "author_id" value
 * @method Article             setCategoryId()   Sets the current record's "category_id" value
 * @method Article             setPublishedAt()  Sets the current record's "published_at" value
 * @method Article             setFile()         Sets the current record's "file" value
 * @method Article             setAuthor()       Sets the current record's "Author" value
 * @method Article             setCategory()     Sets the current record's "Category" value
 * @method Article             setTags()         Sets the current record's "Tags" collection
 * @method Article             setArticleTag()   Sets the current record's "ArticleTag" collection
 * 
 * @package    sis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('status', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('published_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('file', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasMany('Tag as Tags', array(
             'refClass' => 'ArticleTag',
             'local' => 'article_id',
             'foreign' => 'tag_id'));

        $this->hasMany('ArticleTag', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             ));
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}