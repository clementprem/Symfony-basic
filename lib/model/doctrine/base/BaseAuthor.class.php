<?php

/**
 * BaseAuthor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property boolean $active
 * @property Doctrine_Collection $Articles
 * 
 * @method string              getFirstName()  Returns the current record's "first_name" value
 * @method string              getLastName()   Returns the current record's "last_name" value
 * @method string              getEmail()      Returns the current record's "email" value
 * @method boolean             getActive()     Returns the current record's "active" value
 * @method Doctrine_Collection getArticles()   Returns the current record's "Articles" collection
 * @method Author              setFirstName()  Sets the current record's "first_name" value
 * @method Author              setLastName()   Sets the current record's "last_name" value
 * @method Author              setEmail()      Sets the current record's "email" value
 * @method Author              setActive()     Sets the current record's "active" value
 * @method Author              setArticles()   Sets the current record's "Articles" collection
 * 
 * @package    sis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAuthor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('author');
        $this->hasColumn('first_name', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('last_name', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Article as Articles', array(
             'local' => 'id',
             'foreign' => 'author_id'));
    }
}